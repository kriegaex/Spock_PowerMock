# This is a Sarek configuration file with default values.
#
# The default name is 'sarek.properties' and must available as a resource file on your class
# path in order to be found by the AgentAttacher class.
#
# You may override the standard location by setting system property 'dev.sarek.config.file'
# containing a resource or file system path pointing to an alternative location, e.g. via
# Java command line parameter '-Ddev.sarek.config.file=/path/to/my-other-sarek.properties'
# or '-Ddev.sarek.config.file=META_INF/test-config/sarek.properties'.
#
# Please note: All properties defined in this configuration file can also be defined as
# system properties, e.g. as JVM parameter '-Ddev.sarek.log.verbose=true'. If system
# properties are defined, they always take precedence over configuration file values. If
# neither system properties nor config file define a configuration key, these system defaults
# are used:
#
#   dev.sarek.agent.path=
#   dev.sarek.agent.type=sarek
#   dev.sarek.log.verbose=false
#   dev.sarek.unfinal.active=true


# Agent JAR file path. If defined, it takes precedence over 'dev.sarek.agent.type', but must
# be a JAR corresponding to one of those agent types. The value must be a file system path,
# not e.g. a resource path inside a JAR file. Otherwise the JAR cannot be attached to the
# bootstrap class path, which is essential for Sarek functioning correctly with Java bootstrap
# classes.
dev.sarek.agent.path=

# Agent type. One of 'sarek', 'sarek-special', 'unfinal', 'unfinal-special'. Used for automatic
# agent JAR discovery if no explicit path is configured via 'dev.sarek.agent.path'. In order
# for this to work, the JAR of the given type must be on the class path.
dev.sarek.agent.type=sarek-special

# 'true' or 'false'
dev.sarek.log.verbose=false

# 'true' or 'false' and only relevant if the full Sarek agent (types 'sarek', 'sarek-special')
# is active. Implicitly 'true' for the stand-alone UnFinal agent.
dev.sarek.unfinal.active=true
